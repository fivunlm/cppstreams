language: cpp

git:
  depth: false

sudo: required

matrix:
  include:
    - os: linux
      before_install:
        - eval "${MATRIX_EVAL}"
        - $CC --version
        - $CXX --version
      env:
        - BUILD_NAME=GCC-4
        - MATRIX_EVAL="export CC=gcc && export CXX=g++ && export CXX_VERSION=c++1y"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - BUILD_NAME=GCC-5
        - MATRIX_EVAL="export CC=gcc-5 && export CXX=g++-5 && export CXX_VERSION=c++14"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - BUILD_NAME=GCC-6
        - MATRIX_EVAL="export CC=gcc-6 && export CXX=g++-6 && export CXX_VERSION=c++1z"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - BUILD_NAME=GCC-7
        - MATRIX_EVAL="export CC=gcc-7 && export CXX=g++-7 && export CXX_VERSION=c++17"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - BUILD_NAME=GCC-8
        - MATRIX_EVAL="export CC=gcc-8 && export CXX=g++-8 && export CXX_VERSION=c++17"
    - os: osx
      osx_image: xcode9.2
      before_install:
        - eval "${MATRIX_EVAL}"
        - $CC --version
        - $CXX --version
      env:
        - BUILD_NAME=OSX-Clang
        - MATRIX_EVAL="export CC=clang && export CXX=clang++ && export CXX_VERSION=c++14"
    - os: linux
      addons:
        apt:
          packages:
            - clang
      env:
        - BUILD_NAME=Clang-3.4
        - MATRIX_EVAL="export CC=clang-3.4 && export CXX=clang++-3.4 && export CXX_VERSION=c++1y && sudo apt-get remove gcc g++"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - BUILD_NAME=Clang-3
        - MATRIX_EVAL="export CC=clang-3.9 && export CXX=clang++-3.9 && export CXX_VERSION=c++1z && sudo apt-get remove gcc g++"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - BUILD_NAME=Clang-4
        - MATRIX_EVAL="export CC=clang-4.0 && export CXX=clang++-4.0 && export CXX_VERSION=c++14 && sudo apt-get remove gcc g++"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - BUILD_NAME=Clang-5
        - MATRIX_EVAL="export CC=clang-5.0 && export CXX=clang++-5.0 && export CXX_VERSION=c++14 && sudo apt-get remove gcc g++"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
      env:
        - BUILD_NAME=Clang-6
        - MATRIX_EVAL="export CC=clang-6.0 && export CXX=clang++-6.0 && export CXX_VERSION=c++14 && sudo apt-get remove gcc g++"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-7
            - ubuntu-toolchain-r-test
          packages:
            - clang-7
      env:
        - BUILD_NAME=Clang-7
        - MATRIX_EVAL="export CC=clang-7 && export CXX=clang++-7 && export CXX_VERSION=c++14 && sudo apt-get remove gcc g++"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-8
            - ubuntu-toolchain-r-test
          packages:
            - clang-8
      env:
        - BUILD_NAME=Clang-8
        - MATRIX_EVAL="export CC=clang-8 && export CXX=clang++-8 && export CXX_VERSION=c++17 && sudo apt-get remove gcc g++"

before_install:
  - set -x
  - eval "${MATRIX_EVAL}"
  - if [[ $CC == gcc* ]]; then sudo update-alternatives --install $(which gcc) gcc $(which $CC) 100; sudo update-alternatives --install $(which g++) g++ $(which $CXX) 100; fi
  - if [[ $CC == clang* ]]; then sudo update-alternatives --install $(which clang) clang $(which $CC) 100; sudo update-alternatives --install $(which clang++) clang++ $(which $CXX) 100; fi  
  - $CC --version
  - $CXX --version
  - set +x

install:
  - ./gradlew --console=plain

script:
  - ./gradlew --console=plain assemble
  - ./gradlew --console=plain check

after_failure:
  - shopt -s nullglob
  - tail -n+1 {.,lib}/build/tmp/*{Library,Executable,GoogleTestExe}*/*.txt 

